$(document).ready(function () {
	$('.fb-popup').click(function(){
		$(this).hide();
	});
	$('.fb-popupBox').click(function(event){
		event.stopPropagation();
	});
	$('#callbackLink').click(function(){
		$('#callback').show();

		return false;
	});

	$('#deliveryTypeButton').on('click',function(){
		$box = $('#deliveryTypeBox');
		if($box.hasClass('statusActive')){
			$box.removeClass('statusActive');
		}else{
			$box.addClass('statusActive');
		}

		return false;
	});

	$('#deliveryTypeBox').on('click',function(event){
		event.stopPropagation();
	});

	$('body').on('click',function(){
		$box = $('#deliveryTypeBox');
		if($box.hasClass('statusActive')){
			$box.removeClass('statusActive');
		}
	});


	$(document).on('submit', 'form.ajax', function () {
		$('input[type=submit]', this).attr('disabled', 'disabled');
		$(this).find("input[name='ajax']").val('1');
		$(this).ajaxSubmit({
			dataType:'json',

			beforeSubmit:function (a, form, o) {
				$('.errors').hide();
			},

			success:function (response, statusText, xhr, form) {
				$('input[type=submit]', form).removeAttr('disabled');
				var captcha_update = $(form).find("input[name='captcha_update']").val();
				if (response.captcha) {
					if(response.captcha == "recaptcha")
					{
						Recaptcha.reload();
					}
					else
					{
						response.captcha = prepare(response.captcha);
						$(form).find(".captcha").html(response.captcha).show();
					}
				}
				if (!captcha_update && response.errors) {
					$.each(response.errors, function (k, val) {
						val = prepare(val);
						if(!response.form_hide) {
							$(form).find(".error" + (k != 0 ? "_" + k : '')).html(val).show();
						}
						else
						{
							$(form).parent().find(".error"+ (k != 0 ? "_" + k : '')).html(val).show();
						}
					});
				}
				if (response.success) {
					$(form).clearForm();
					$(form).find('.inpattachment input[type=file]').each(function () {
						if($(this).parents('.inpattachment').css('display') == 'none')
						{
							var clone = $(this).parents('.inpattachment');
							clone.before(clone.clone(true));
							clone.prev('.inpattachment').show();
							var name = str_replace('hide_', '', clone.prev('.inpattachment').find('input').val('').attr("name"), 0 );
							clone.prev('.inpattachment').find('input').val('').attr("name", name);
						}
						else
						{
							$(this).parents('.inpattachment').remove();
						}
					});
					$(form).find('input[type=file]').removeClass('last');
					$(form).find('input[type=file]').val('');
				}
				if (response.add) {
					$('.' + $(form).attr("id")).append(prepare(response.add));
					$('.' + $(form).attr("id")).show();
				}
				if (response.form) {
					$(form).html(prepare(response.form));
				}
				if (response.form_hide) {
					if (response.target_hide) {
						$(response.target_hide).hide();
					}
					else {
						$(form).hide();
					}
				}
				if (response.redirect) {
					window.location = response.redirect;
				}
				if (response.data && response.target) {
					$(response.target).html(prepare(response.data)).show();
					$(form).find("input[name=avatar]").val('');
				}
				if (response.data2 && response.target2) {
					$(response.target2).html(prepare(response.data2)).show();
				}
				if(response.attachments){
					 $.each(response.attachments, function (k, val) {
						val = prepare(val);
						$(form).find(".attachment[name='"+k+"']").remove();
						$(form).find(".inpattachment input[name='"+k+"']").parents('.inpattachment').remove();
						$(form).find(".inpattachment input[name='hide_"+k+"']").parents('.inpattachment').before(val);
						$(form).find(".attachment[name='"+k+"']").show();
						if($(form).find(".inpattachment input[name='hide_"+k+"']").attr("max") > $(form).find(".attachment[name='"+k+"']").length)
						{
							var clone = $(form).find("input[name='hide_" + k + "']").parents('.inpattachment');
							clone.before(clone.clone(true));
							clone.prev('.inpattachment').show();
							clone.prev('.inpattachment').find('input').val('').attr("name", k);
						}
					});
				}
				if(response.images){
					 $.each(response.images, function (k, val) {
						$(form).find("input[name='"+k+"']").val('');
						$(form).find("input[name='"+k+"']").parents('div').first().find('.image').remove();
						if(val == false)
						{
							val = '';
						}
						$(form).find("input[name='"+k+"']").before(prepare(val));
					});
				}
				if (response.hash) {
					$('input[name=check_hash_user]').val(response.hash);
				}
				return false;
			}
		});
		return false;
	});

	$(document).on('change', ".inpfiles", function () {
		var inpattachment = $(this).parents('.inpattachment');
		if (! $(this).attr("max") || $(this).parents('form').find('input[name="' + $(this).attr("name") + '"], .attachment[name="' + $(this).attr("name") + '"]').length < $(this).attr("max")) {
			var clone = $(this).parents('form').find('input[name="hide_' + $(this).attr("name") + '"]').parents('.inpattachment');
			clone.before(clone.clone(true));
			clone.prev('.inpattachment').show().find('input').val('').attr("name", $(this).attr("name"));
		}
		if(! inpattachment.find(".inpattachment_delete").length)
		{
			inpattachment.append(' <a href="#" class="inpattachment_delete">x</a>');
		}
	});

	$(document).on('click', ".inpattachment_delete", function () {
		var inpattachment = $(this).parents('.inpattachment');
		var input = inpattachment.find('.inpfiles');
		var last_input = input.parents('form').find('input[name="' + input.attr("name") + '"]').last();
		if (last_input.val()) {
			var clone = $(this).parents('form').find('input[name="hide_' + input.attr("name") + '"]').parents('.inpattachment');
			clone.before(clone.clone(true));
			clone.prev('.inpattachment').show().find('input').val('').attr("name", input.attr("name"));
		}
		inpattachment.remove();
		return false;
	});

	$(document).on('click', ".attachment_delete", function(){
		var attachment = $(this).parents('.attachment');
		attachment.find("input[name='hide_attachment_delete[]']").attr("name", "attachment_delete[]");
		attachment.hide().removeClass('attachment');

		var last_input = attachment.parents('form').find('input[name="' + attachment.attr("name") + '"]').last();
		if(! last_input.length || last_input.val())
		{
			var clone = $(this).parents('form').find("input[name='hide_" + attachment.attr("name") + "']").parents('.inpattachment');
			clone.before(clone.clone(true));
			clone.prev('.inpattachment').show();
			clone.prev('.inpattachment').find('input').val('').attr("name", attachment.attr("name"));
		}
		return false;
	});

	$(document).on('change', ".inpimages", function () {
		var form = $(this).parents('form');
		var self = $(this);
		form.ajaxSubmit({
			dataType:'json',
			data : {
				ajax: 1,
				images_param_id:self.attr('param_id'),
				images_prefix: self.attr('prefix'),
				action: 'upload_image'
			},

			beforeSubmit:function (a, form, o) {
				$('.errors').hide();
			},

			success:function (response) {
				if (response.hash)
				{
					$('input[name=check_hash_user]').val(response.hash);
				}
				if (response.data)
				{
					self.prev('.images').html(prepare(response.data));
					self.val('');
				}
				if (response.errors)
				{
					$.each(response.errors, function (k, val) {
						form.find(".error" + (k != 0 ? "_" + k : '')).html(prepare(val)).show();
					});
				}
			}
		});
	});

	$(document).on('click', ".image_delete", function(){
		var image= $(this).parents('.image');
		var form = $(this).parents('form');
		$.ajax({
			url : window.location.href,
			type : 'POST',
			dataType : 'json',
			data : {
				module:  form.find('input[name=module]').val(),
				action: 'delete_image',
				ajax: true,
				element_id: form.find('input[name=id]').val(),
				tmpcode: form.find('input[name=tmpcode]').val(),
				id: image.find('img').attr('image_id'),
				check_hash_user : $('input[name=check_hash_user]').val()
			},
			success : (function(response)
			{
				if (response.hash)
				{
					$('input[name=check_hash_user]').val(response.hash);
				}
			})
		});
		image.remove();
		return false;
	});

	$(".timecalendar").each(function () {
		var st = $(this).attr('showtime');

		if (st && st.match(/true/i)) {
			$(this).datetimepicker({
				dateFormat:'dd.mm.yy',
				timeFormat:'hh:mm'
			});
		}
		else {
			$(this).datepicker({
				dateFormat:'dd.mm.yy'
			});
		}
	});

	$("select[name=depend]").change(function () {
		var price_id = $(this).find('option:selected').attr('rel');
		$(this).parents('form').find('.shop-price-depend').hide();
		$(this).parents('form').find('.price_id' + price_id).show();
	});

	$(document).on('keydown', '.inpnum', function (evt) {
		evt = (evt) ? evt : ((window.event) ? event : null);

		if (evt) {
			var elem = (evt.target)
				? evt.target
				: (
				evt.srcElement
					? evt.srcElement
					: null
				);

			if (elem) {
				var charCode = evt.charCode
					? evt.charCode
					: (evt.which
					? evt.which
					: evt.keyCode
					);

				if ((charCode < 32 ) ||
					(charCode > 44 && charCode < 47) ||
					(charCode > 95 && charCode < 106) ||
					(charCode > 47 && charCode < 58) || charCode == 188 || charCode == 191 || charCode == 190 || charCode == 110) {
					return true;
				}
				else {
					return false;
				}
			}
		}
	});
	$(document).on('click', '.captcha_update', function () {
		$(this).parents("form").find("input[name=captcha_update]").val("1");
		$(this).parents("form").submit();
	});
	$(document).on('click', 'a[rel=large_image]', function () {
		var self = $(this);
		window.open(self.attr("href"), '', 'toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=' + (self.attr("width") * 1 + 40) + ',height=' + (self.attr("height") * 1 + 40));
		return false;
	});
});

function prepare(string) {
	string = str_replace('&lt;', '<', string);
	string = str_replace('&gt;', '>', string);
	string = str_replace('&amp;', '&', string);
	return string;
}

function str_replace(search, replace, subject, count) {
	f = [].concat(search),
		r = [].concat(replace),
		s = subject,
		ra = r instanceof Array, sa = s instanceof Array;
	s = [].concat(s);
	if (count) {
		this.window[count] = 0;
	}
	for (i = 0, sl = s.length; i < sl; i++) {
		if (s[i] === '') {
			continue;
		}
		for (j = 0, fl = f.length; j < fl; j++) {
			temp = s[i] + '';
			repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];
			s[i] = (temp).split(f[j]).join(repl);
			if (count && s[i] !== temp) {
				this.window[count] += (temp.length - s[i].length) / f[j].length;
			}
		}
	}
	return sa ? s : s[0];
}

function add2Fav(a) {
	title = document.title;
	url = document.location;
	try {
		// Internet Explorer
		window.external.AddFavorite(url, title);
	}
	catch (e) {
		try {
			// Mozilla
			window.sidebar.addPanel(title, url, "");
		}
		catch (e) {
			// Opera
			if (typeof(opera) == "object") {
				a.rel = "sidebar";
				a.title = title;
				a.url = url;
				return true;
			}
			else {
				// Unknown
				alert('Нажмите Ctrl-D чтобы добавить страницу в закладки');
			}
		}
	}
	return false;
}